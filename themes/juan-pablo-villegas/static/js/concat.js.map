{"version":3,"sources":["concat.js"],"names":["global","apple_phone","apple_ipod","apple_tablet","android_phone","android_tablet","amazon_phone","amazon_tablet","windows_phone","windows_tablet","other_blackberry","other_blackberry_10","other_opera","other_chrome","other_firefox","seven_inch","RegExp","match","regex","userAgent","test","IsMobileClass","ua","navigator","tmp","split","this","apple","phone","ipod","tablet","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","window","instantiate","IM","Class","module","exports","define","amd","isMobile","document","undefined","is","obj","type","testRunner","featureNames","feature","aliasIdx","result","nameIdx","featureName","featureNameSplit","featureIdx","tests","hasOwnProperty","name","push","toLowerCase","options","aliases","length","fn","Modernizr","Boolean","classes","join","setClasses","className","docElement","classPrefix","_config","isSVG","baseVal","enableJSClass","reJS","replace","enableClasses","addTest","key","hasOwnProp","last","_trigger","contains","str","substr","indexOf","createElement","arguments","createElementNS","call","apply","getBody","body","fake","injectElementWithStyles","rule","callback","nodes","testnames","style","ret","node","docOverflow","mod","div","parseInt","id","appendChild","styleSheet","cssText","createTextNode","background","overflow","parentNode","removeChild","offsetHeight","domToCSS","m1","nativeTestProps","props","value","i","CSS","supports","conditionText","getComputedStyle","position","cssToDOM","m2","toUpperCase","testProps","prefixed","skipValueTest","cleanElems","afterInit","mStyle","modElem","propsLength","prop","before","elems","shift","e","ModernizrProto","_version","usePrefixes","_q","on","cb","self","setTimeout","addAsyncTest","prototype","documentElement","nodeName","_hasOwnProperty","object","property","constructor","_l","res","cbs","addStyleSheet","ownerDocument","p","parent","getElementsByTagName","innerHTML","insertBefore","lastChild","firstChild","getElements","elements","html5","addElements","newElements","shivDocument","getExpandoData","data","expandoData","expando","expanID","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","tagUrn","frag","createDocumentFragment","clone","l","shivMethods","createFrag","Function","shivCSS","supportsHtml5Styles","hasCSS","addWrappers","index","reElements","applyElement","createWrapper","element","attributes","wrapper","shivNamespace","specified","setAttribute","nodeValue","shivCssText","pair","parts","replacement","removeWrappers","wrappers","removeNode","shivPrint","removeSheet","clearTimeout","_removeSheetTimer","shivedSheet","namespaces","ownerWindow","parentWindow","supportsShivableSheets","printShived","add","attachEvent","imports","sheet","collection","styleSheets","sheets","Array","pop","disabled","reMedia","media","er","reverse","version","a","childNodes","docEl","elem","unshift","prefixes","testProp","useValue","_prefixes","testStyles","bool","DocumentTouch","query","offsetTop","t","n","r","s","o","u","require","f","Error","code","1","console","log","ismobile","2","3","dup"],"mappings":"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","file":"concat.js","sourcesContent":["/**\n * isMobile.js v0.4.0\n *\n * A simple library to detect Apple phones and tablets,\n * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),\n * and any kind of seven inch device, via user agent sniffing.\n *\n * @author: Kai Mallea (kmallea@gmail.com)\n *\n * @license: http://creativecommons.org/publicdomain/zero/1.0/\n */\n(function (global) {\n\n    var apple_phone         = /iPhone/i,\n        apple_ipod          = /iPod/i,\n        apple_tablet        = /iPad/i,\n        android_phone       = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n        android_tablet      = /Android/i,\n        amazon_phone        = /(?=.*\\bAndroid\\b)(?=.*\\bSD4930UR\\b)/i,\n        amazon_tablet       = /(?=.*\\bAndroid\\b)(?=.*\\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\\b)/i,\n        windows_phone       = /IEMobile/i,\n        windows_tablet      = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n        other_blackberry    = /BlackBerry/i,\n        other_blackberry_10 = /BB10/i,\n        other_opera         = /Opera Mini/i,\n        other_chrome        = /(CriOS|Chrome)(?=.*\\bMobile\\b)/i,\n        other_firefox       = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i, // Match 'Firefox' AND 'Mobile'\n        seven_inch = new RegExp(\n            '(?:' +         // Non-capturing group\n\n            'Nexus 7' +     // Nexus 7\n\n            '|' +           // OR\n\n            'BNTV250' +     // B&N Nook Tablet 7 inch\n\n            '|' +           // OR\n\n            'Kindle Fire' + // Kindle Fire\n\n            '|' +           // OR\n\n            'Silk' +        // Kindle Fire, Silk Accelerated\n\n            '|' +           // OR\n\n            'GT-P1000' +    // Galaxy Tab 7 inch\n\n            ')',            // End non-capturing group\n\n            'i');           // Case-insensitive matching\n\n    var match = function(regex, userAgent) {\n        return regex.test(userAgent);\n    };\n\n    var IsMobileClass = function(userAgent) {\n        var ua = userAgent || navigator.userAgent;\n\n        // Facebook mobile app's integrated browser adds a bunch of strings that\n        // match everything. Strip it out if it exists.\n        var tmp = ua.split('[FBAN');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n        // iPhone\" string. Same probable happens on other tablet platforms.\n        // This will confuse detection so strip it out if it exists.\n        tmp = ua.split('Twitter');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        this.apple = {\n            phone:  match(apple_phone, ua),\n            ipod:   match(apple_ipod, ua),\n            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),\n            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)\n        };\n        this.amazon = {\n            phone:  match(amazon_phone, ua),\n            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n        };\n        this.android = {\n            phone:  match(amazon_phone, ua) || match(android_phone, ua),\n            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)\n        };\n        this.windows = {\n            phone:  match(windows_phone, ua),\n            tablet: match(windows_tablet, ua),\n            device: match(windows_phone, ua) || match(windows_tablet, ua)\n        };\n        this.other = {\n            blackberry:   match(other_blackberry, ua),\n            blackberry10: match(other_blackberry_10, ua),\n            opera:        match(other_opera, ua),\n            firefox:      match(other_firefox, ua),\n            chrome:       match(other_chrome, ua),\n            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)\n        };\n        this.seven_inch = match(seven_inch, ua);\n        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;\n\n        // excludes 'other' devices and ipods, targeting touchscreen phones\n        this.phone = this.apple.phone || this.android.phone || this.windows.phone;\n\n        // excludes 7 inch devices, classifying as phone or tablet is left to the user\n        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;\n\n        if (typeof window === 'undefined') {\n            return this;\n        }\n    };\n\n    var instantiate = function() {\n        var IM = new IsMobileClass();\n        IM.Class = IsMobileClass;\n        return IM;\n    };\n\n    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {\n        //node\n        module.exports = IsMobileClass;\n    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {\n        //browserify\n        module.exports = instantiate();\n    } else if (typeof define === 'function' && define.amd) {\n        //AMD\n        define('isMobile', [], global.isMobile = instantiate());\n    } else {\n        global.isMobile = instantiate();\n    }\n\n})(this);\n\n/*!\n * modernizr v3.3.1\n * Build http://modernizr.com/download?-touchevents-addtest-fnbind-printshiv-setclasses-testprop-dontmin\n *\n * Copyright (c)\n *  Faruk Ates\n *  Paul Irish\n *  Alex Sexton\n *  Ryan Seddon\n *  Patrick Kettner\n *  Stu Cox\n *  Richard Herrera\n\n * MIT License\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in the\n * current UA and makes the results available to you in two ways: as properties on\n * a global `Modernizr` object, and as classes on the `<html>` element. This\n * information allows you to progressively enhance your pages with a granular level\n * of control over the experience.\n*/\n\n;(function(window, document, undefined){\n  var tests = [];\n  \n\n  /**\n   *\n   * ModernizrProto is the constructor for Modernizr\n   *\n   * @class\n   * @access public\n   */\n\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.3.1',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function() {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function(name, fn, options) {\n      tests.push({name: name, fn: fn, options: options});\n    },\n\n    addAsyncTest: function(fn) {\n      tests.push({name: null, fn: fn});\n    }\n  };\n\n  \n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  \n\n  var classes = [];\n  \n\n  /**\n   * is returns a boolean if the typeof an obj is exactly type.\n   *\n   * @access private\n   * @function is\n   * @param {*} obj - A thing we want to check the type of\n   * @param {string} type - A string to compare the typeof against\n   * @returns {boolean}\n   */\n\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n  ;\n\n  /**\n   * Run through all tests and detect their support in the current UA.\n   *\n   * @access private\n   */\n\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already\n            /* jshint -W053 */\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\n   * docElement is a convenience wrapper to grab the root element of the document\n   *\n   * @access private\n   * @returns {HTMLElement|SVGElement} The root element of the document\n   */\n\n  var docElement = document.documentElement;\n  \n\n  /**\n   * A convenience helper to check if the document we are running in is an SVG document\n   *\n   * @access private\n   * @returns {boolean}\n   */\n\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n  \n\n  /**\n   * setClasses takes an array of class names and adds them to the root element\n   *\n   * @access private\n   * @function setClasses\n   * @param {string[]} classes - Array of class names\n   */\n\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      isSVG ? docElement.className.baseVal = className : docElement.className = className;\n    }\n\n  }\n\n  ;\n\n  /**\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\n   *\n   * @author kangax\n   * @access private\n   * @function hasOwnProp\n   * @param {object} object - The object to check for a property\n   * @param {string} property - The property to check for\n   * @returns {boolean}\n   */\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function() {\n    var _hasOwnProperty = ({}).hasOwnProperty;\n    /* istanbul ignore else */\n    /* we have no way of testing IE 5.5 or safari 2,\n     * so just assume the else gets hit */\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n      hasOwnProp = function(object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function(object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n  })();\n\n  \n\n\n   // _l tracks listeners for async tests, as well as tests that execute after the initial run\n  ModernizrProto._l = {};\n\n  /**\n   * Modernizr.on is a way to listen for the completion of async tests. Being\n   * asynchronous, they may not finish before your scripts run. As a result you\n   * will get a possibly false negative `undefined` value.\n   *\n   * @memberof Modernizr\n   * @name Modernizr.on\n   * @access public\n   * @function on\n   * @param {string} feature - String name of the feature detect\n   * @param {function} cb - Callback function returning a Boolean - true if feature is supported, false if not\n   * @example\n   *\n   * ```js\n   * Modernizr.on('flash', function( result ) {\n   *   if (result) {\n   *    // the browser has flash\n   *   } else {\n   *     // the browser does not have flash\n   *   }\n   * });\n   * ```\n   */\n\n  ModernizrProto.on = function(feature, cb) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[feature]) {\n      this._l[feature] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[feature].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(feature)) {\n      // Next Tick\n      setTimeout(function() {\n        Modernizr._trigger(feature, Modernizr[feature]);\n      }, 0);\n    }\n  };\n\n  /**\n   * _trigger is the private function used to signal test completion and run any\n   * callbacks registered through [Modernizr.on](#modernizr-on)\n   *\n   * @memberof Modernizr\n   * @name Modernizr._trigger\n   * @access private\n   * @function _trigger\n   * @param {string} feature - string name of the feature detect\n   * @param {function|boolean} [res] - A feature detection function, or the boolean =\n   * result of a feature detection function\n   */\n\n  ModernizrProto._trigger = function(feature, res) {\n    if (!this._l[feature]) {\n      return;\n    }\n\n    var cbs = this._l[feature];\n\n    // Force async\n    setTimeout(function() {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    }, 0);\n\n    // Don't trigger these again\n    delete this._l[feature];\n  };\n\n  /**\n   * addTest allows you to define your own feature detects that are not currently\n   * included in Modernizr (under the covers it's the exact same code Modernizr\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)). Just like the offical detects, the result\n   * will be added onto the Modernizr object, as well as an appropriate className set on\n   * the html element when configured to do so\n   *\n   * @memberof Modernizr\n   * @name Modernizr.addTest\n   * @optionName Modernizr.addTest()\n   * @optionProp addTest\n   * @access public\n   * @function addTest\n   * @param {string|object} feature - The string name of the feature detect, or an\n   * object of feature detect names and test\n   * @param {function|boolean} test - Function returning true if feature is supported,\n   * false if not. Otherwise a boolean representing the results of a feature detection\n   * @example\n   *\n   * The most common way of creating your own feature detects is by calling\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\n   * punctuation), and a function you want executed that will return a boolean result\n   *\n   * ```js\n   * Modernizr.addTest('itsTuesday', function() {\n   *  var d = new Date();\n   *  return d.getDay() === 2;\n   * });\n   * ```\n   *\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\n   * and to `false` every other day of the week. One thing to notice is that the names of\n   * feature detect functions are always lowercased when added to the Modernizr object. That\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\n   *\n   *\n   *  Since we only look at the returned value from any feature detection function,\n   *  you do not need to actually use a function. For simple detections, just passing\n   *  in a statement that will return a boolean value works just fine.\n   *\n   * ```js\n   * Modernizr.addTest('hasJquery', 'jQuery' in window);\n   * ```\n   *\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\n   * jQuery has been included on the page. Not using a function saves a small amount\n   * of overhead for the browser, as well as making your code much more readable.\n   *\n   * Finally, you also have the ability to pass in an object of feature names and\n   * their tests. This is handy if you want to add multiple detections in one go.\n   * The keys should always be a string, and the value can be either a boolean or\n   * function that returns a boolean.\n   *\n   * ```js\n   * var detects = {\n   *  'hasjquery': 'jQuery' in window,\n   *  'itstuesday': function() {\n   *    var d = new Date();\n   *    return d.getDay() === 2;\n   *  }\n   * }\n   *\n   * Modernizr.addTest(detects);\n   * ```\n   *\n   * There is really no difference between the first methods and this one, it is\n   * just a convenience to let you write more readable code.\n   */\n\n  function addTest(feature, test) {\n\n    if (typeof feature == 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          addTest(key, feature[ key ]);\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length == 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if (typeof last != 'undefined') {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test == 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length == 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      } else {\n        // cast to a Boolean, if not one already\n        /* jshint -W053 */\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      /* jshint -W041 */\n      setClasses([(!!test && test != false ? '' : 'no-') + featureNameSplit.join('-')]);\n      /* jshint +W041 */\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self to the Modernizr prototype\n  Modernizr._q.push(function() {\n    ModernizrProto.addTest = addTest;\n  });\n\n  \n\n\n/**\n  * @optionName html5printshiv\n  * @optionProp html5printshiv\n  */\n\n  // Take the html5 variable out of the html5shiv scope so we can return it.\n  var html5;\n  if (!isSVG) {\n\n    /**\n     * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n      /*jshint evil:true */\n      /** version */\n      var version = '3.7.3';\n\n      /** Preset options */\n      var options = window.html5 || {};\n\n      /** Used to skip problem elements */\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n      /** Not all elements can be cloned in IE **/\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n      /** Detect whether the browser supports default html5 styles */\n      var supportsHtml5Styles;\n\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\n      var expando = '_html5shiv';\n\n      /** The id for the the documents expando */\n      var expanID = 0;\n\n      /** Cached data for each document */\n      var expandoData = {};\n\n      /** Detect whether the browser supports unknown elements */\n      var supportsUnknownElements;\n\n      (function() {\n        try {\n          var a = document.createElement('a');\n          a.innerHTML = '<xyz></xyz>';\n          //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n          supportsHtml5Styles = ('hidden' in a);\n\n          supportsUnknownElements = a.childNodes.length == 1 || (function() {\n            // assign a false positive if unable to shiv\n            (document.createElement)('a');\n            var frag = document.createDocumentFragment();\n            return (\n              typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n            );\n          }());\n        } catch(e) {\n          // assign a false positive if detection fails => unable to shiv\n          supportsHtml5Styles = true;\n          supportsUnknownElements = true;\n        }\n\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Creates a style sheet with the given CSS text and adds it to the document.\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @param {String} cssText The CSS text.\n       * @returns {StyleSheet} The style element.\n       */\n      function addStyleSheet(ownerDocument, cssText) {\n        var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n        p.innerHTML = 'x<style>' + cssText + '</style>';\n        return parent.insertBefore(p.lastChild, parent.firstChild);\n      }\n\n      /**\n       * Returns the value of `html5.elements` as an array.\n       * @private\n       * @returns {Array} An array of shived element node names.\n       */\n      function getElements() {\n        var elements = html5.elements;\n        return typeof elements == 'string' ? elements.split(' ') : elements;\n      }\n\n      /**\n       * Extends the built-in list of html5 elements\n       * @memberOf html5\n       * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n       * @param {Document} ownerDocument The context document.\n       */\n      function addElements(newElements, ownerDocument) {\n        var elements = html5.elements;\n        if(typeof elements != 'string'){\n          elements = elements.join(' ');\n        }\n        if(typeof newElements != 'string'){\n          newElements = newElements.join(' ');\n        }\n        html5.elements = elements +' '+ newElements;\n        shivDocument(ownerDocument);\n      }\n\n      /**\n       * Returns the data associated to the given document\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Object} An object of data.\n       */\n      function getExpandoData(ownerDocument) {\n        var data = expandoData[ownerDocument[expando]];\n        if (!data) {\n          data = {};\n          expanID++;\n          ownerDocument[expando] = expanID;\n          expandoData[expanID] = data;\n        }\n        return data;\n      }\n\n      /**\n       * returns a shived element for the given nodeName and document\n       * @memberOf html5\n       * @param {String} nodeName name of the element\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived element.\n       */\n      function createElement(nodeName, ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createElement(nodeName);\n        }\n        if (!data) {\n          data = getExpandoData(ownerDocument);\n        }\n        var node;\n\n        if (data.cache[nodeName]) {\n          node = data.cache[nodeName].cloneNode();\n        } else if (saveClones.test(nodeName)) {\n          node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n        } else {\n          node = data.createElem(nodeName);\n        }\n\n        // Avoid adding some elements to fragments in IE < 9 because\n        // * Attributes like `name` or `type` cannot be set/changed once an element\n        //   is inserted into a document/fragment\n        // * Link elements with `src` attributes that are inaccessible, as with\n        //   a 403 response, will cause the tab/window to crash\n        // * Script elements appended to fragments will execute when their `src`\n        //   or `text` property is set\n        return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n      }\n\n      /**\n       * returns a shived DocumentFragment for the given document\n       * @memberOf html5\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived DocumentFragment.\n       */\n      function createDocumentFragment(ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createDocumentFragment();\n        }\n        data = data || getExpandoData(ownerDocument);\n        var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n        for(;i<l;i++){\n          clone.createElement(elems[i]);\n        }\n        return clone;\n      }\n\n      /**\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n       * @private\n       * @param {Document|DocumentFragment} ownerDocument The document.\n       * @param {Object} data of the document.\n       */\n      function shivMethods(ownerDocument, data) {\n        if (!data.cache) {\n          data.cache = {};\n          data.createElem = ownerDocument.createElement;\n          data.createFrag = ownerDocument.createDocumentFragment;\n          data.frag = data.createFrag();\n        }\n\n\n        ownerDocument.createElement = function(nodeName) {\n          //abort shiv\n          if (!html5.shivMethods) {\n            return data.createElem(nodeName);\n          }\n          return createElement(nodeName, ownerDocument, data);\n        };\n\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                        'var n=f.cloneNode(),c=n.createElement;' +\n                                                        'h.shivMethods&&(' +\n                                                        // unroll the `createElement` calls\n                                                        getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n          data.createElem(nodeName);\n          data.frag.createElement(nodeName);\n          return 'c(\"' + nodeName + '\")';\n        }) +\n          ');return n}'\n                                                       )(html5, data.frag);\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivDocument(ownerDocument) {\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        var data = getExpandoData(ownerDocument);\n\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n          data.hasCSS = !!addStyleSheet(ownerDocument,\n                                        // corrects block display not defined in IE6/7/8/9\n                                        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                        // adds styling not present in IE6/7/8/9\n                                        'mark{background:#FF0;color:#000}' +\n                                        // hides non-rendered elements\n                                        'template{display:none}'\n                                       );\n        }\n        if (!supportsUnknownElements) {\n          shivMethods(ownerDocument, data);\n        }\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * The `html5` object is exposed so that more elements can be shived and\n       * existing shiving can be detected on iframes.\n       * @type Object\n       * @example\n       *\n       * // options can be changed before the script is included\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n       */\n      var html5 = {\n\n        /**\n         * An array or space separated string of node names of the elements to shiv.\n         * @memberOf html5\n         * @type Array|String\n         */\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n        /**\n         * current version of html5shiv\n         */\n        'version': version,\n\n        /**\n         * A flag to indicate that the HTML5 style sheet should be inserted.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivCSS': (options.shivCSS !== false),\n\n        /**\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\n         * @memberOf html5\n         * @type boolean\n         */\n        'supportsUnknownElements': supportsUnknownElements,\n\n        /**\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n         * methods should be overwritten.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivMethods': (options.shivMethods !== false),\n\n        /**\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\n         * @memberOf html5\n         * @type String\n         */\n        'type': 'default',\n\n        // shivs the document according to the specified `html5` object options\n        'shivDocument': shivDocument,\n\n        //creates a shived element\n        createElement: createElement,\n\n        //creates a shived documentFragment\n        createDocumentFragment: createDocumentFragment,\n\n        //extends list of elements\n        addElements: addElements\n      };\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose html5\n      window.html5 = html5;\n\n      // shiv the document\n      shivDocument(document);\n\n      /*------------------------------- Print Shiv -------------------------------*/\n\n      /** Used to filter media types */\n      var reMedia = /^$|\\b(?:all|print)\\b/;\n\n      /** Used to namespace printable elements */\n      var shivNamespace = 'html5shiv';\n\n      /** Detect whether the browser supports shivable style sheets */\n      var supportsShivableSheets = !supportsUnknownElements && (function() {\n        // assign a false negative if unable to shiv\n        var docEl = document.documentElement;\n        return !(\n          typeof document.namespaces == 'undefined' ||\n            typeof document.parentWindow == 'undefined' ||\n            typeof docEl.applyElement == 'undefined' ||\n            typeof docEl.removeNode == 'undefined' ||\n            typeof window.attachEvent == 'undefined'\n        );\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Wraps all HTML5 elements in the given document with printable elements.\n       * (eg. the \"header\" element is wrapped with the \"html5shiv:header\" element)\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Array} An array wrappers added.\n       */\n      function addWrappers(ownerDocument) {\n        var node,\n        nodes = ownerDocument.getElementsByTagName('*'),\n          index = nodes.length,\n          reElements = RegExp('^(?:' + getElements().join('|') + ')$', 'i'),\n          result = [];\n\n        while (index--) {\n          node = nodes[index];\n          if (reElements.test(node.nodeName)) {\n            result.push(node.applyElement(createWrapper(node)));\n          }\n        }\n        return result;\n      }\n\n      /**\n       * Creates a printable wrapper for the given element.\n       * @private\n       * @param {Element} element The element.\n       * @returns {Element} The wrapper.\n       */\n      function createWrapper(element) {\n        var node,\n        nodes = element.attributes,\n          index = nodes.length,\n          wrapper = element.ownerDocument.createElement(shivNamespace + ':' + element.nodeName);\n\n        // copy element attributes to the wrapper\n        while (index--) {\n          node = nodes[index];\n          node.specified && wrapper.setAttribute(node.nodeName, node.nodeValue);\n        }\n        // copy element styles to the wrapper\n        wrapper.style.cssText = element.style.cssText;\n        return wrapper;\n      }\n\n      /**\n       * Shivs the given CSS text.\n       * (eg. header{} becomes html5shiv\\:header{})\n       * @private\n       * @param {String} cssText The CSS text to shiv.\n       * @returns {String} The shived CSS text.\n       */\n      function shivCssText(cssText) {\n        var pair,\n        parts = cssText.split('{'),\n          index = parts.length,\n          reElements = RegExp('(^|[\\\\s,>+~])(' + getElements().join('|') + ')(?=[[\\\\s,>+~#.:]|$)', 'gi'),\n          replacement = '$1' + shivNamespace + '\\\\:$2';\n\n        while (index--) {\n          pair = parts[index] = parts[index].split('}');\n          pair[pair.length - 1] = pair[pair.length - 1].replace(reElements, replacement);\n          parts[index] = pair.join('}');\n        }\n        return parts.join('{');\n      }\n\n      /**\n       * Removes the given wrappers, leaving the original elements.\n       * @private\n       * @params {Array} wrappers An array of printable wrappers.\n       */\n      function removeWrappers(wrappers) {\n        var index = wrappers.length;\n        while (index--) {\n          wrappers[index].removeNode();\n        }\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document for print.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivPrint(ownerDocument) {\n        var shivedSheet,\n        wrappers,\n        data = getExpandoData(ownerDocument),\n          namespaces = ownerDocument.namespaces,\n          ownerWindow = ownerDocument.parentWindow;\n\n        if (!supportsShivableSheets || ownerDocument.printShived) {\n          return ownerDocument;\n        }\n        if (typeof namespaces[shivNamespace] == 'undefined') {\n          namespaces.add(shivNamespace);\n        }\n\n        function removeSheet() {\n          clearTimeout(data._removeSheetTimer);\n          if (shivedSheet) {\n            shivedSheet.removeNode(true);\n          }\n          shivedSheet= null;\n        }\n\n        ownerWindow.attachEvent('onbeforeprint', function() {\n\n          removeSheet();\n\n          var imports,\n          length,\n          sheet,\n          collection = ownerDocument.styleSheets,\n            cssText = [],\n            index = collection.length,\n            sheets = Array(index);\n\n          // convert styleSheets collection to an array\n          while (index--) {\n            sheets[index] = collection[index];\n          }\n          // concat all style sheet CSS text\n          while ((sheet = sheets.pop())) {\n            // IE does not enforce a same origin policy for external style sheets...\n            // but has trouble with some dynamically created stylesheets\n            if (!sheet.disabled && reMedia.test(sheet.media)) {\n\n              try {\n                imports = sheet.imports;\n                length = imports.length;\n              } catch(er){\n                length = 0;\n              }\n\n              for (index = 0; index < length; index++) {\n                sheets.push(imports[index]);\n              }\n\n              try {\n                cssText.push(sheet.cssText);\n              } catch(er){}\n            }\n          }\n\n          // wrap all HTML5 elements with printable elements and add the shived style sheet\n          cssText = shivCssText(cssText.reverse().join(''));\n          wrappers = addWrappers(ownerDocument);\n          shivedSheet = addStyleSheet(ownerDocument, cssText);\n\n        });\n\n        ownerWindow.attachEvent('onafterprint', function() {\n          // remove wrappers, leaving the original elements, and remove the shived style sheet\n          removeWrappers(wrappers);\n          clearTimeout(data._removeSheetTimer);\n          data._removeSheetTimer = setTimeout(removeSheet, 500);\n        });\n\n        ownerDocument.printShived = true;\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose API\n      html5.type += ' print';\n      html5.shivPrint = shivPrint;\n\n      // shiv for print\n      shivPrint(document);\n\n      if(typeof module == 'object' && module.exports){\n        module.exports = html5;\n      }\n\n    }(typeof window !== \"undefined\" ? window : this, document));\n  }\n\n  ;\n\n\n  /**\n   * contains checks to see if a string contains another string\n   *\n   * @access private\n   * @function contains\n   * @param {string} str - The string we want to check for substrings\n   * @param {string} substr - The substring we want to search the first string for\n   * @returns {boolean}\n   */\n\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n\n  /**\n   * createElement is a convenience wrapper around document.createElement. Since we\n   * use createElement all over the place, this allows for (slightly) smaller code\n   * as well as abstracting away issues with creating elements in contexts other than\n   * HTML documents (e.g. SVG documents).\n   *\n   * @access private\n   * @function createElement\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\n   */\n\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n\n  /**\n   * Create our \"modernizr\" element that we do most feature tests on.\n   *\n   * @access private\n   */\n\n  var modElem = {\n    elem: createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function() {\n    delete modElem.elem;\n  });\n\n  \n\n  var mStyle = {\n    style: modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function() {\n    delete mStyle.style;\n  });\n\n  \n\n  /**\n   * getBody returns the body of a document, or an element that can stand in for\n   * the body if a real body does not exist\n   *\n   * @access private\n   * @function getBody\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\n   * artificially created element that stands in for the body\n   */\n\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\n   * injectElementWithStyles injects an element with style element and some CSS rules\n   *\n   * @access private\n   * @function injectElementWithStyles\n   * @param {string} rule - String representing a css rule\n   * @param {function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean}\n   */\n\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n\n  }\n\n  ;\n\n  /**\n   * domToCSS takes a camelCase string and converts it to kebab-case\n   * e.g. boxSizing -> box-sizing\n   *\n   * @access private\n   * @function domToCSS\n   * @param {string} name - String name of camelCase prop we want to convert\n   * @returns {string} The kebab-case version of the supplied name\n   */\n\n  function domToCSS(name) {\n    return name.replace(/([A-Z])/g, function(str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n  ;\n\n  /**\n   * nativeTestProps allows for us to use native feature detection functionality if available.\n   * some prefixed form, or false, in the case of an unsupported rule\n   *\n   * @access private\n   * @function nativeTestProps\n   * @param {array} props - An array of property names\n   * @param {string} value - A string representing the value we want to check via @supports\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\n   */\n\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps(props, value) {\n    var i = props.length;\n    // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n      // Build a condition string for every prefixed variant\n      var conditionText = [];\n      while (i--) {\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n      }\n      conditionText = conditionText.join(' or ');\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function(node) {\n        return getComputedStyle(node, null).position == 'absolute';\n      });\n    }\n    return undefined;\n  }\n  ;\n\n  /**\n   * cssToDOM takes a kebab-case string and converts it to camelCase\n   * e.g. box-sizing -> boxSizing\n   *\n   * @access private\n   * @function cssToDOM\n   * @param {string} name - String name of kebab-case prop we want to convert\n   * @returns {string} The camelCase version of the supplied name\n   */\n\n  function cssToDOM(name) {\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Property names can be provided in either camelCase or kebab-case.\n\n  function testProps(props, prefixed, value, skipValueTest) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if (!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, propsLength, prop, before;\n\n    // If we don't have a style element, that means we're running async or after\n    // the core tests, so we'll need to create our own elements to use\n\n    // inside of an SVG element, in certain browsers, the `style` element is only\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\n    // fall back to a less used element and hope for the best.\n    var elems = ['modernizr', 'tspan'];\n    while (!mStyle.style) {\n      afterInit = true;\n      mStyle.modElem = createElement(elems.shift());\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    propsLength = props.length;\n    for (i = 0; i < propsLength; i++) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if (contains(prop, '-')) {\n        prop = cssToDOM(prop);\n      }\n\n      if (mStyle.style[prop] !== undefined) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] != before) {\n            cleanElems();\n            return prefixed == 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n          cleanElems();\n          return prefixed == 'pfx' ? prop : true;\n        }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  /**\n   * testProp() investigates whether a given style property is recognized\n   * Property names can be provided in either camelCase or kebab-case.\n   *\n   * @memberof Modernizr\n   * @name Modernizr.testProp\n   * @access public\n   * @optionName Modernizr.testProp()\n   * @optionProp testProp\n   * @function testProp\n   * @param {string} prop - Name of the CSS property to check\n   * @param {string} [value] - Name of the CSS value to check\n   * @param {boolean} [useValue] - Whether or not to check the value if @supports isn't supported\n   * @returns {boolean}\n   * @example\n   *\n   * Just like [testAllProps](#modernizr-testallprops), only it does not check any vendor prefixed\n   * version of the string.\n   *\n   * Note that the property name must be provided in camelCase (e.g. boxSizing not box-sizing)\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents')  // true\n   * ```\n   *\n   * You can also provide a value as an optional second argument to check if a\n   * specific value is supported\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents', 'none') // true\n   * Modernizr.testProp('pointerEvents', 'penguin') // false\n   * ```\n   */\n\n  var testProp = ModernizrProto.testProp = function(prop, value, useValue) {\n    return testProps([prop], undefined, value, useValue);\n  };\n  \n\n  /**\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\n   *\n   * @access private\n   * @function fnBind\n   * @param {function} fn - a function you want to change `this` reference to\n   * @param {object} that - the `this` you want to call the function with\n   * @returns {function} The wrapped version of the supplied function\n   */\n\n  function fnBind(fn, that) {\n    return function() {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n\n  /**\n   * List of property values to set for css tests. See ticket #21\n   * http://git.io/vUGl4\n   *\n   * @memberof Modernizr\n   * @name Modernizr._prefixes\n   * @optionName Modernizr._prefixes\n   * @optionProp prefixes\n   * @access public\n   * @example\n   *\n   * Modernizr._prefixes is the internal list of prefixes that we test against\n   * inside of things like [prefixed](#modernizr-prefixed) and [prefixedCSS](#-code-modernizr-prefixedcss). It is simply\n   * an array of kebab-case vendor prefixes you can use within your code.\n   *\n   * Some common use cases include\n   *\n   * Generating all possible prefixed version of a CSS property\n   * ```js\n   * var rule = Modernizr._prefixes.join('transform: rotate(20deg); ');\n   *\n   * rule === 'transform: rotate(20deg); webkit-transform: rotate(20deg); moz-transform: rotate(20deg); o-transform: rotate(20deg); ms-transform: rotate(20deg);'\n   * ```\n   *\n   * Generating all possible prefixed version of a CSS value\n   * ```js\n   * rule = 'display:' +  Modernizr._prefixes.join('flex; display:') + 'flex';\n   *\n   * rule === 'display:flex; display:-webkit-flex; display:-moz-flex; display:-o-flex; display:-ms-flex; display:flex'\n   * ```\n   */\n\n  var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : []);\n\n  // expose these for the plugin API. Look in the source for how to join() them against your input\n  ModernizrProto._prefixes = prefixes;\n\n  \n\n  /**\n   * testStyles injects an element with style element and some CSS rules\n   *\n   * @memberof Modernizr\n   * @name Modernizr.testStyles\n   * @optionName Modernizr.testStyles()\n   * @optionProp testStyles\n   * @access public\n   * @function testStyles\n   * @param {string} rule - String representing a css rule\n   * @param {function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean}\n   * @example\n   *\n   * `Modernizr.testStyles` takes a CSS rule and injects it onto the current page\n   * along with (possibly multiple) DOM elements. This lets you check for features\n   * that can not be detected by simply checking the [IDL](https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Interface_development_guide/IDL_interface_rules).\n   *\n   * ```js\n   * Modernizr.testStyles('#modernizr { width: 9px; color: papayawhip; }', function(elem, rule) {\n   *   // elem is the first DOM node in the page (by default #modernizr)\n   *   // rule is the first argument you supplied - the CSS rule in string form\n   *\n   *   addTest('widthworks', elem.style.width === '9px')\n   * });\n   * ```\n   *\n   * If your test requires multiple nodes, you can include a third argument\n   * indicating how many additional div elements to include on the page. The\n   * additional nodes are injected as children of the `elem` that is returned as\n   * the first argument to the callback.\n   *\n   * ```js\n   * Modernizr.testStyles('#modernizr {width: 1px}; #modernizr2 {width: 2px}', function(elem) {\n   *   document.getElementById('modernizr').style.width === '1px'; // true\n   *   document.getElementById('modernizr2').style.width === '2px'; // true\n   *   elem.firstChild === document.getElementById('modernizr2'); // true\n   * }, 1);\n   * ```\n   *\n   * By default, all of the additional elements have an ID of `modernizr[n]`, where\n   * `n` is its index (e.g. the first additional, second overall is `#modernizr2`,\n   * the second additional is `#modernizr3`, etc.).\n   * If you want to have more meaningful IDs for your function, you can provide\n   * them as the fourth argument, as an array of strings\n   *\n   * ```js\n   * Modernizr.testStyles('#foo {width: 10px}; #bar {height: 20px}', function(elem) {\n   *   elem.firstChild === document.getElementById('foo'); // true\n   *   elem.lastChild === document.getElementById('bar'); // true\n   * }, 2, ['foo', 'bar']);\n   * ```\n   *\n   */\n\n  var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\n  \n/*!\n{\n  \"name\": \"Touch Events\",\n  \"property\": \"touchevents\",\n  \"caniuse\" : \"touch\",\n  \"tags\": [\"media\", \"attribute\"],\n  \"notes\": [{\n    \"name\": \"Touch Events spec\",\n    \"href\": \"https://www.w3.org/TR/2013/WD-touch-events-20130124/\"\n  }],\n  \"warnings\": [\n    \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\n  ],\n  \"knownBugs\": [\n    \"False-positive on some configurations of Nokia N900\",\n    \"False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\n  ]\n}\n!*/\n/* DOC\nIndicates if the browser supports the W3C Touch Events API.\n\nThis *does not* necessarily reflect a touchscreen device:\n\n* Older touchscreen devices only emulate mouse events\n* Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\n* Some browsers & OS setups may enable touch APIs when no touchscreen is connected\n* Future browsers may implement other event models for touch interactions\n\nSee this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\n\nIt's recommended to bind both mouse and touch/pointer events simultaneously – see [this HTML5 Rocks tutorial](http://www.html5rocks.com/en/mobile/touchandmouse/).\n\nThis test will also return `true` for Firefox 4 Multitouch support.\n*/\n\n  // Chrome (desktop) used to lie about its support on this, but that has since been rectified: http://crbug.com/36415\n  Modernizr.addTest('touchevents', function() {\n    var bool;\n    if (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n      bool = true;\n    } else {\n      // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n      // https://git.io/vznFH\n      var query = ['@media (', prefixes.join('touch-enabled),('), 'heartz', ')', '{#modernizr{top:9px;position:absolute}}'].join('');\n      testStyles(query, function(node) {\n        bool = node.offsetTop === 9;\n      });\n    }\n    return bool;\n  });\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n;\n\n})(window, document);\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// import utils = require('./utils')\nconsole.log('Hello wworld');\nModernizr.addTest('ismobile', function () {\n    return isMobile.any;\n});\nconsole.log(Modernizr.ismobile);\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\narguments[4][2][0].apply(exports,arguments)\n},{\"dup\":2}]},{},[1,2,3])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJ0aGVtZXMvanVhbi1wYWJsby12aWxsZWdhcy9zdGF0aWMvdHMvYXBwLnRzIiwidHlwaW5ncy9pbmRleC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsb0NBQW9DO0FBRXBDLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7QUFLNUIsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUU7SUFDN0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7QUFDckIsQ0FBQyxDQUFDLENBQUM7QUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7O0FDWGhDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIGltcG9ydCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5jb25zb2xlLmxvZygnSGVsbG8gd3dvcmxkJyk7XG5cbmRlY2xhcmUgdmFyIGlzTW9iaWxlOiBhbnk7XG5kZWNsYXJlIHZhciBNb2Rlcm5penI6IGFueTtcblxuTW9kZXJuaXpyLmFkZFRlc3QoJ2lzbW9iaWxlJywgZnVuY3Rpb24oKSB7XG4gcmV0dXJuIGlzTW9iaWxlLmFueTtcbn0pO1xuXG5jb25zb2xlLmxvZyhNb2Rlcm5penIuaXNtb2JpbGUpOyIsIiJdfQ==\n"],"sourceRoot":"/source/"}